{"version":3,"sources":["components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedbackOptions/FeedbackOptions.jsx","components/App.jsx","index.js","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","style","textAlign","fontSize","fontWeight","Statistics","feedbacks","total","positivePercentage","className","s","list","Object","entries","map","k","v","item","wrapper","FeedbackOptions","handleOnClick","type","name","onClick","btn","App","useState","good","setGood","neutral","setNeutral","bad","setBad","feedback","totalFeedback","e","target","state","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOAqBeA,EAlBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,mBACEC,MAAO,CAAEC,UAAW,SAAUC,SAAU,SAAUC,WAAY,QADhE,SAGGL,IAEFC,M,gBCyBQK,EA/BI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACtC,OACE,cAAC,EAAD,CAAST,MAAM,aAAf,SACE,qBAAIU,UAAWC,IAAEC,KAAjB,UACGC,OAAOC,QAAQP,GAAWQ,KAAI,mCAAEC,EAAF,KAAKC,EAAL,YAC7B,qBAAYP,UAAWC,IAAEO,KAAzB,UACGF,EADH,MACQ,uBAAMN,UAAWC,IAAEQ,QAAnB,cAA8BF,OAD7BD,MAIX,qBAAIN,UAAWC,IAAEO,KAAjB,qBACU,sBAAMR,UAAWC,IAAEQ,QAAnB,SAA6BX,OAEvC,qBAAIE,UAAWC,IAAEO,KAAjB,kCACwB,IACtB,sBAAMR,UAAWC,IAAEQ,QAAnB,SAA6BV,a,gBCexBW,EA7BS,SAAC,GAAkC,IAAhCb,EAA+B,EAA/BA,UAAWc,EAAoB,EAApBA,cACpC,OACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,qBAAKU,UAAWC,IAAEQ,QAAlB,SACGN,OAAOC,QAAQP,GAAWQ,KAAI,gBAAEC,EAAF,2BAC7B,wBAEEM,KAAK,SACLC,KAAMP,EACNQ,QAASH,EACTX,UAAWC,IAAEc,IALf,SAOGT,GANIA,WCPF,SAASU,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMC,EAAW,CACfN,OACAE,UACAE,OAEIG,EAAgBP,EAAOE,EAAUE,EA2BvC,OACE,qCACE,cAAC,EAAD,CAAiBzB,UAAW2B,EAAUb,cA3BpB,SAAAe,GAEpB,OADiBA,EAAEC,OAAXd,MAEN,IAAK,OACHM,GAAQ,SAAAS,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHP,GAAW,SAAAO,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,WAeDH,EAAgB,EACf,cAAC,EAAD,CACE5B,UAAW2B,EACX1B,MAAO2B,EACP1B,mBAdgB,IAAlB0B,EACK,EAEFI,KAAKC,MAAOZ,EAAOO,EAAiB,OAcvC,mBACEjC,MAAO,CACLC,UAAW,SACXC,SAAU,UAHd,mCC/CRqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,8B,kBCA5FD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,gC","file":"static/js/main.4d182e2c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <p\n        style={{ textAlign: 'center', fontSize: 'larger', fontWeight: 'bold' }}\n      >\n        {title}\n      </p>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../section/Section';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ feedbacks, total, positivePercentage }) => {\n  return (\n    <Section title=\"Statistics\">\n      <ul className={s.list}>\n        {Object.entries(feedbacks).map(([k, v]) => (\n          <li key={k} className={s.item}>\n            {k} : <span className={s.wrapper}> {v}</span>\n          </li>\n        ))}\n        <li className={s.item}>\n          Total : <span className={s.wrapper}>{total}</span>\n        </li>\n        <li className={s.item}>\n          % Positive Feedback :{' '}\n          <span className={s.wrapper}>{positivePercentage}</span>\n        </li>\n      </ul>\n    </Section>\n  );\n};\n\nStatistics.propTypes = {\n  feedbacks: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../section/Section';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ feedbacks, handleOnClick }) => {\n  return (\n    <Section title=\"Please leave feedback\">\n      <div className={s.wrapper}>\n        {Object.entries(feedbacks).map(([k]) => (\n          <button\n            key={k}\n            type=\"button\"\n            name={k}\n            onClick={handleOnClick}\n            className={s.btn}\n          >\n            {k}\n          </button>\n        ))}\n      </div>\n    </Section>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  feedbacks: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  handleOnClick: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { useState } from 'react';\nimport Statistics from './statistics/Statistics';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedback = {\n    good,\n    neutral,\n    bad,\n  };\n  const totalFeedback = good + neutral + bad;\n\n  const handleOnClick = e => {\n    const { name } = e.target;\n    switch (name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (totalFeedback === 0) {\n      return 0;\n    }\n    return Math.round((good / totalFeedback) * 100);\n  };\n\n  return (\n    <>\n      <FeedbackOptions feedbacks={feedback} handleOnClick={handleOnClick} />\n\n      {totalFeedback > 0 ? (\n        <Statistics\n          feedbacks={feedback}\n          total={totalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <p\n          style={{\n            textAlign: 'center',\n            fontSize: 'larger',\n          }}\n        >\n          No feedback given.\n        </p>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './components/App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3eYkw\",\"item\":\"Statistics_item__V5txQ\",\"wrapper\":\"Statistics_wrapper__3ah31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__36Qrt\",\"btn\":\"FeedbackOptions_btn__5FzbO\"};"],"sourceRoot":""}